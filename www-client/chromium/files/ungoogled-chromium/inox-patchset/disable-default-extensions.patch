--- a/chrome/browser/extensions/component_loader.cc
+++ b/chrome/browser/extensions/component_loader.cc
@@ -351,7 +351,7 @@ void ComponentLoader::AddWebstoreWidgetExtension() {
 }
 
 void ComponentLoader::AddHangoutServicesExtension() {
-#if defined(GOOGLE_CHROME_BUILD) || defined(ENABLE_HANGOUT_SERVICES_EXTENSION)
+#if 0
   Add(IDR_HANGOUT_SERVICES_MANIFEST,
       base::FilePath(FILE_PATH_LITERAL("hangout_services")));
 #endif
@@ -388,7 +388,7 @@ void ComponentLoader::AddNetworkSpeechSynthesisExtension() {
 }
 
 void ComponentLoader::AddGoogleNowExtension() {
-#if BUILDFLAG(ENABLE_GOOGLE_NOW)
+#if 0
   const char kEnablePrefix[] = "Enable";
   const char kFieldTrialName[] = "GoogleNow";
   std::string enable_prefix(kEnablePrefix);
@@ -424,7 +424,7 @@ void ComponentLoader::AddGoogleNowExtension() {
   } else {
     DeleteData(google_now_manifest_id, root_directory);
   }
-#endif  // BUILDFLAG(ENABLE_GOOGLE_NOW)
+#endif  // 0
 }
 
 #if defined(OS_CHROMEOS)
@@ -500,15 +500,15 @@ void ComponentLoader::AddKeyboardApp() {
 }
 
 void ComponentLoader::AddWebStoreApp() {
-#if defined(OS_CHROMEOS)
+#if 0
   if (!IsNormalSession())
     return;
-#endif
 
   AddWithNameAndDescription(
       IDR_WEBSTORE_MANIFEST, base::FilePath(FILE_PATH_LITERAL("web_store")),
       l10n_util::GetStringUTF8(IDS_WEBSTORE_NAME_STORE),
       l10n_util::GetStringUTF8(IDS_WEBSTORE_APP_DESCRIPTION));
+#endif
 }
 
 scoped_refptr<const Extension> ComponentLoader::CreateExtension(
@@ -641,13 +641,6 @@ void ComponentLoader::AddDefaultComponentExtensionsWithBackgroundPages(
     AddImageLoaderExtension();
     AddGoogleNowExtension();
 
-    bool install_feedback = enable_background_extensions_during_testing;
-#if defined(GOOGLE_CHROME_BUILD)
-    install_feedback = true;
-#endif  // defined(GOOGLE_CHROME_BUILD)
-    if (install_feedback)
-      Add(IDR_FEEDBACK_MANIFEST, base::FilePath(FILE_PATH_LITERAL("feedback")));
-
 #if defined(ENABLE_SETTINGS_APP)
     Add(IDR_SETTINGS_APP_MANIFEST,
         base::FilePath(FILE_PATH_LITERAL("settings_app")));
